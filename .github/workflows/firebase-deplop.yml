name: CI/CD for Spring Boot Project with Gradle and Firebase

on:
  push:
    branches:
      - master 
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: '8.10.2'

      - name: Build with Gradle
        run: gradle build
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info
      

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Install Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: '8.10.2' 
      - name: Build with Gradle
        run: gradle build

      #- run: ls -a
      #- name: Install Firebase CLI
      #  run: curl -sL https://firebase.tools | bash

      #- name: Deploy to Firebase
      #  env:
      #    FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      #  run: firebase deploy --only hosting
   
